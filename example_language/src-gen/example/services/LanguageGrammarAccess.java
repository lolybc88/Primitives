/*
* generated by Xtext
*/
package example.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class LanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ComposerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Composer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComposerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPrimitivesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrimitivesMTLPrimitiveParserRuleCall_3_0 = (RuleCall)cPrimitivesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPrimitivesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPrimitivesMTLPrimitiveParserRuleCall_4_1_0 = (RuleCall)cPrimitivesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Composer:
		//	"Composer" name=ID "{" primitives+=MTLPrimitive ("," primitives+=MTLPrimitive)* "}";
		public ParserRule getRule() { return rule; }

		//"Composer" name=ID "{" primitives+=MTLPrimitive ("," primitives+=MTLPrimitive)* "}"
		public Group getGroup() { return cGroup; }

		//"Composer"
		public Keyword getComposerKeyword_0() { return cComposerKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//primitives+=MTLPrimitive
		public Assignment getPrimitivesAssignment_3() { return cPrimitivesAssignment_3; }

		//MTLPrimitive
		public RuleCall getPrimitivesMTLPrimitiveParserRuleCall_3_0() { return cPrimitivesMTLPrimitiveParserRuleCall_3_0; }

		//("," primitives+=MTLPrimitive)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//primitives+=MTLPrimitive
		public Assignment getPrimitivesAssignment_4_1() { return cPrimitivesAssignment_4_1; }

		//MTLPrimitive
		public RuleCall getPrimitivesMTLPrimitiveParserRuleCall_4_1_0() { return cPrimitivesMTLPrimitiveParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MTLPrimitiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MTLPrimitive");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUpdaterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDeclarerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAssignerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cComposerParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//MTLPrimitive:
		//	Creator | Updater | Declarer | Assigner | Composer;
		public ParserRule getRule() { return rule; }

		//Creator | Updater | Declarer | Assigner | Composer
		public Alternatives getAlternatives() { return cAlternatives; }

		//Creator
		public RuleCall getCreatorParserRuleCall_0() { return cCreatorParserRuleCall_0; }

		//Updater
		public RuleCall getUpdaterParserRuleCall_1() { return cUpdaterParserRuleCall_1; }

		//Declarer
		public RuleCall getDeclarerParserRuleCall_2() { return cDeclarerParserRuleCall_2; }

		//Assigner
		public RuleCall getAssignerParserRuleCall_3() { return cAssignerParserRuleCall_3; }

		//Composer
		public RuleCall getComposerParserRuleCall_4() { return cComposerParserRuleCall_4; }
	}

	public class CreatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Creator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCreatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCreatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cFeaturesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cFeaturesFeatureAssignerParserRuleCall_6_0_0 = (RuleCall)cFeaturesAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cFeaturesAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureAssignerParserRuleCall_6_1_1_0 = (RuleCall)cFeaturesAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cCreatorNameAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCreatorNameIDTerminalRuleCall_9_0 = (RuleCall)cCreatorNameAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Creator:
		//	{Creator} "Creator" "(" type=STRING "," "{" (features+=FeatureAssigner ("," features+=FeatureAssigner)*)* "}" ","
		//	creatorName=ID ")";
		public ParserRule getRule() { return rule; }

		//{Creator} "Creator" "(" type=STRING "," "{" (features+=FeatureAssigner ("," features+=FeatureAssigner)*)* "}" ","
		//creatorName=ID ")"
		public Group getGroup() { return cGroup; }

		//{Creator}
		public Action getCreatorAction_0() { return cCreatorAction_0; }

		//"Creator"
		public Keyword getCreatorKeyword_1() { return cCreatorKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//(features+=FeatureAssigner ("," features+=FeatureAssigner)*)*
		public Group getGroup_6() { return cGroup_6; }

		//features+=FeatureAssigner
		public Assignment getFeaturesAssignment_6_0() { return cFeaturesAssignment_6_0; }

		//FeatureAssigner
		public RuleCall getFeaturesFeatureAssignerParserRuleCall_6_0_0() { return cFeaturesFeatureAssignerParserRuleCall_6_0_0; }

		//("," features+=FeatureAssigner)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//features+=FeatureAssigner
		public Assignment getFeaturesAssignment_6_1_1() { return cFeaturesAssignment_6_1_1; }

		//FeatureAssigner
		public RuleCall getFeaturesFeatureAssignerParserRuleCall_6_1_1_0() { return cFeaturesFeatureAssignerParserRuleCall_6_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//creatorName=ID
		public Assignment getCreatorNameAssignment_9() { return cCreatorNameAssignment_9; }

		//ID
		public RuleCall getCreatorNameIDTerminalRuleCall_9_0() { return cCreatorNameIDTerminalRuleCall_9_0; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}

	public class UpdaterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Updater");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUpdaterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUpdaterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFeaturesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFeaturesFeatureAssignerParserRuleCall_5_1_0 = (RuleCall)cFeaturesAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cFeaturesFeatureAssignerParserRuleCall_5_2_1_0 = (RuleCall)cFeaturesAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Updater:
		//	{Updater} "Updater" "(" type=STRING "," ("{" features+=FeatureAssigner ("," features+=FeatureAssigner)* "}")? ")";
		public ParserRule getRule() { return rule; }

		//{Updater} "Updater" "(" type=STRING "," ("{" features+=FeatureAssigner ("," features+=FeatureAssigner)* "}")? ")"
		public Group getGroup() { return cGroup; }

		//{Updater}
		public Action getUpdaterAction_0() { return cUpdaterAction_0; }

		//"Updater"
		public Keyword getUpdaterKeyword_1() { return cUpdaterKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//("{" features+=FeatureAssigner ("," features+=FeatureAssigner)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//features+=FeatureAssigner
		public Assignment getFeaturesAssignment_5_1() { return cFeaturesAssignment_5_1; }

		//FeatureAssigner
		public RuleCall getFeaturesFeatureAssignerParserRuleCall_5_1_0() { return cFeaturesFeatureAssignerParserRuleCall_5_1_0; }

		//("," features+=FeatureAssigner)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//features+=FeatureAssigner
		public Assignment getFeaturesAssignment_5_2_1() { return cFeaturesAssignment_5_2_1; }

		//FeatureAssigner
		public RuleCall getFeaturesFeatureAssignerParserRuleCall_5_2_1_0() { return cFeaturesFeatureAssignerParserRuleCall_5_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class FeatureAssignerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureAssigner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureAssignerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFeatureSTRINGTerminalRuleCall_2_0 = (RuleCall)cFeatureAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSTRINGTerminalRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FeatureAssigner:
		//	{FeatureAssigner} "[" feature=STRING "," value=STRING "]";
		public ParserRule getRule() { return rule; }

		//{FeatureAssigner} "[" feature=STRING "," value=STRING "]"
		public Group getGroup() { return cGroup; }

		//{FeatureAssigner}
		public Action getFeatureAssignerAction_0() { return cFeatureAssignerAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//feature=STRING
		public Assignment getFeatureAssignment_2() { return cFeatureAssignment_2; }

		//STRING
		public RuleCall getFeatureSTRINGTerminalRuleCall_2_0() { return cFeatureSTRINGTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//value=STRING
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_4_0() { return cValueSTRINGTerminalRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class DeclarerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Declarer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeclarerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDeclarerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Declarer:
		//	{Declarer} "Declarer" "(" type=STRING "," name=ID ")";
		public ParserRule getRule() { return rule; }

		//{Declarer} "Declarer" "(" type=STRING "," name=ID ")"
		public Group getGroup() { return cGroup; }

		//{Declarer}
		public Action getDeclarerAction_0() { return cDeclarerAction_0; }

		//"Declarer"
		public Keyword getDeclarerKeyword_1() { return cDeclarerKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class AssignerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Assigner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAssignerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAssignerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVarAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cVarDeclarerCrossReference_3_0 = (CrossReference)cVarAssignment_3.eContents().get(0);
		private final RuleCall cVarDeclarerIDTerminalRuleCall_3_0_1 = (RuleCall)cVarDeclarerCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCreatorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCreatorCreatorParserRuleCall_5_0 = (RuleCall)cCreatorAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Assigner:
		//	{Assigner} "Assigner" "(" var=[Declarer] "," creator+=Creator ")";
		public ParserRule getRule() { return rule; }

		//{Assigner} "Assigner" "(" var=[Declarer] "," creator+=Creator ")"
		public Group getGroup() { return cGroup; }

		//{Assigner}
		public Action getAssignerAction_0() { return cAssignerAction_0; }

		//"Assigner"
		public Keyword getAssignerKeyword_1() { return cAssignerKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//var=[Declarer]
		public Assignment getVarAssignment_3() { return cVarAssignment_3; }

		//[Declarer]
		public CrossReference getVarDeclarerCrossReference_3_0() { return cVarDeclarerCrossReference_3_0; }

		//ID
		public RuleCall getVarDeclarerIDTerminalRuleCall_3_0_1() { return cVarDeclarerIDTerminalRuleCall_3_0_1; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//creator+=Creator
		public Assignment getCreatorAssignment_5() { return cCreatorAssignment_5; }

		//Creator
		public RuleCall getCreatorCreatorParserRuleCall_5_0() { return cCreatorCreatorParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	
	
	private ComposerElements pComposer;
	private MTLPrimitiveElements pMTLPrimitive;
	private CreatorElements pCreator;
	private UpdaterElements pUpdater;
	private FeatureAssignerElements pFeatureAssigner;
	private DeclarerElements pDeclarer;
	private AssignerElements pAssigner;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public LanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("example.Language".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Composer:
	//	"Composer" name=ID "{" primitives+=MTLPrimitive ("," primitives+=MTLPrimitive)* "}";
	public ComposerElements getComposerAccess() {
		return (pComposer != null) ? pComposer : (pComposer = new ComposerElements());
	}
	
	public ParserRule getComposerRule() {
		return getComposerAccess().getRule();
	}

	//MTLPrimitive:
	//	Creator | Updater | Declarer | Assigner | Composer;
	public MTLPrimitiveElements getMTLPrimitiveAccess() {
		return (pMTLPrimitive != null) ? pMTLPrimitive : (pMTLPrimitive = new MTLPrimitiveElements());
	}
	
	public ParserRule getMTLPrimitiveRule() {
		return getMTLPrimitiveAccess().getRule();
	}

	//Creator:
	//	{Creator} "Creator" "(" type=STRING "," "{" (features+=FeatureAssigner ("," features+=FeatureAssigner)*)* "}" ","
	//	creatorName=ID ")";
	public CreatorElements getCreatorAccess() {
		return (pCreator != null) ? pCreator : (pCreator = new CreatorElements());
	}
	
	public ParserRule getCreatorRule() {
		return getCreatorAccess().getRule();
	}

	//Updater:
	//	{Updater} "Updater" "(" type=STRING "," ("{" features+=FeatureAssigner ("," features+=FeatureAssigner)* "}")? ")";
	public UpdaterElements getUpdaterAccess() {
		return (pUpdater != null) ? pUpdater : (pUpdater = new UpdaterElements());
	}
	
	public ParserRule getUpdaterRule() {
		return getUpdaterAccess().getRule();
	}

	//FeatureAssigner:
	//	{FeatureAssigner} "[" feature=STRING "," value=STRING "]";
	public FeatureAssignerElements getFeatureAssignerAccess() {
		return (pFeatureAssigner != null) ? pFeatureAssigner : (pFeatureAssigner = new FeatureAssignerElements());
	}
	
	public ParserRule getFeatureAssignerRule() {
		return getFeatureAssignerAccess().getRule();
	}

	//Declarer:
	//	{Declarer} "Declarer" "(" type=STRING "," name=ID ")";
	public DeclarerElements getDeclarerAccess() {
		return (pDeclarer != null) ? pDeclarer : (pDeclarer = new DeclarerElements());
	}
	
	public ParserRule getDeclarerRule() {
		return getDeclarerAccess().getRule();
	}

	//Assigner:
	//	{Assigner} "Assigner" "(" var=[Declarer] "," creator+=Creator ")";
	public AssignerElements getAssignerAccess() {
		return (pAssigner != null) ? pAssigner : (pAssigner = new AssignerElements());
	}
	
	public ParserRule getAssignerRule() {
		return getAssignerAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
